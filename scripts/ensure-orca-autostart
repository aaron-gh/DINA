#!/usr/bin/env bash
#
# ensure-orca-autostart - Helper script for DINA window manager startup
# 
# This script is now a legacy wrapper that informs users that Orca
# is started directly by DINA and no additional configuration is needed

# ANSI color codes for prettier output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Print info message
info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# Print success message
success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

# Print warning message
warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# Print error message
error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
}

# Check for existing Orca autostart entry and remove it
remove_orca_autostart() {
    local orca_autostart="$HOME/.config/autostart/orca-screen-reader.desktop"
    if [ -f "$orca_autostart" ]; then
        info "Found legacy Orca autostart entry: $orca_autostart"
        info "Removing it since DINA now starts Orca directly"
        rm "$orca_autostart"
        success "Removed legacy Orca autostart entry"
    fi
}

# Create or update the DINA configuration file
ensure_dina_config() {
    local config_dir="$HOME/.config/dina"
    local config_file="$config_dir/config"
    
    # Create the DINA config directory if it doesn't exist
    if [ ! -d "$config_dir" ]; then
        info "Creating DINA configuration directory: $config_dir"
        mkdir -p "$config_dir"
    fi
    
    # Check if config file exists
    if [ ! -f "$config_file" ]; then
        info "DINA configuration file doesn't exist yet"
        info "It will be created the first time you run DINA"
        info "or by using the interactive-userinstall script"
        return
    fi
    
    # Check if accessibility section exists in the config file
    if ! grep -q "\[accessibility\]" "$config_file"; then
        info "Adding accessibility section to DINA config file"
        cat >> "$config_file" << EOF

[accessibility]
# Sound/speech preferences
enable_sounds = true
enable_screen_reader = true
announce_window_changes = true
announce_workspace_changes = true
EOF
        success "Added accessibility configuration to DINA config file"
    else
        # Make sure screen reader is enabled
        if grep -q "enable_screen_reader = false" "$config_file"; then
            info "Enabling screen reader in DINA configuration"
            sed -i 's/enable_screen_reader = false/enable_screen_reader = true/' "$config_file"
            success "Enabled screen reader in DINA configuration"
        else
            success "Screen reader is already enabled in DINA configuration"
        fi
    fi
}

# Main function
main() {
    info "DINA Window Manager Information"
    info "==============================="
    warning "Note: This script is now legacy and no longer required"
    info "DINA window manager now starts Orca screen reader directly"
    info "No additional configuration is needed to enable the screen reader"
    
    # Clean up any existing autostart entries that are no longer needed
    remove_orca_autostart
    
    # Ensure DINA config has screen reader enabled
    ensure_dina_config
    
    success "Orca screen reader is configured to start automatically with DINA"
    info "To customize accessibility options, edit ~/.config/dina/config"
    info "or run the interactive-userinstall script"
}

# Run the main function
main "$@"